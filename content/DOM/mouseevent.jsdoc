MouseEvent : UIEvent

MouseEvent contains information describing the current event 
generated by a mouse action such as move or click.

Spec:
http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent

----
new MouseEvent( \
  type : String,  \
  [eventInit : { \
     bubbles : Boolean, \
     cancelable: Boolean, \
     view : Window, \
     detail : Number, \
     screenX : Number, \
     screenY : Number, \
     clientX : Number, \
     clientY : Number, \
     ctrlKey : Boolean, \
     shiftKey : Boolean, \
     altKey : Boolean, \
     metaKey : Boolean, \
     button : Number, \
     buttons : Number, \
     relatedTarget : Element \
  }]) : MouseEvent

Creates a new MouseEvent of the specified **type** and initial properties.

Spec:
http://www.w3.org/TR/DOM-Level-3-Events/#idl-interface-MouseEvent-initializers

----
instance.clientX : Number

The x position of the pointer relative to the viewport at the time the event fired.
This is the same as %%#x|**x**%%.

See the corresponding 
%%#clientY|**clientY**%% 
and alternative coordinates
%%#offsetX|**offsetX**%%,
%%#pageX|**pageX**%%, and
%%#screenX|**screenX**%%.

<htmlexample>
<div id="element" style="background: radial-gradient(#aff, #bbb); height: 500px; width: 500px;">
</div>
<pre id="output" style="position: fixed; top: 10px; left: 20px; pointer-events: none;">
</pre>
<script>
  var element = document.getElementById('element');
  var output = document.getElementById('output');

  element.onmousemove = function(event) {
    output.textContent = 'x/y:    (' + event.x       + ', ' + event.y       + ')\n' +
                         'client: (' + event.clientX + ', ' + event.clientY + ')\n' +
                         'offset: (' + event.offsetX + ', ' + event.offsetY + ')\n' +
                         'page:   (' + event.pageX   + ', ' + event.pageY   + ')\n' +
                         'screen: (' + event.screenX + ', ' + event.screenY + ')\n';
  };
</script>
</htmlexample>

ReadOnly:
true

Spec:
https://drafts.csswg.org/cssom-view/#dom-mouseevent-clientx

----
instance.clientY : Number

The y position of the pointer relative to the viewport at the time the event fired.
This is the same as %%#y|**y**%%.

See the corresponding 
%%#clientX|**clientX**%% 
and alternative coordinates
%%#offsetY|**offsetY**%%,
%%#pageY|**pageY**%%, and
%%#screenY|**screenY**%%.

<htmlexample>
<div id="element" style="background: radial-gradient(#aff, #bbb); height: 500px; width: 500px;">
</div>
<pre id="output" style="position: fixed; top: 10px; left: 20px; pointer-events: none;">
</pre>
<script>
  var element = document.getElementById('element');
  var output = document.getElementById('output');

  element.onmousemove = function(event) {
    output.textContent = 'x/y:    (' + event.x       + ', ' + event.y       + ')\n' +
                         'client: (' + event.clientX + ', ' + event.clientY + ')\n' +
                         'offset: (' + event.offsetX + ', ' + event.offsetY + ')\n' +
                         'page:   (' + event.pageX   + ', ' + event.pageY   + ')\n' +
                         'screen: (' + event.screenX + ', ' + event.screenY + ')\n';
  };
</script>
</htmlexample>

ReadOnly:
true

Spec:
https://drafts.csswg.org/cssom-view/#dom-mouseevent-clienty

----
instance.movementX : Number

The change in x position of the pointer since the last time the mouse move event fired.

See the corresponding %%#movementY|**movementY**%% and 
%%/Element#requestPointerLock|element.requestPointerLock()%%.

<htmlexample>
<div id="element" style="background: radial-gradient(#aff, #bbb); height: 500px; width: 500px;">
</div>
<pre id="output" style="position: fixed; top: 10px; left: 20px; pointer-events: none;">
</pre>
<script>
  var element = document.getElementById('element');
  var output = document.getElementById('output');

  element.onmousemove = function(event) {
    output.textContent = 'x/y:      (' + event.x         + ', ' + event.y         + ')\n' +
                         'client:   (' + event.clientX   + ', ' + event.clientY   + ')\n' +
                         'movement: (' + event.movementX + ', ' + event.movementY + ')\n' +
                         'offset:   (' + event.offsetX   + ', ' + event.offsetY   + ')\n' +
                         'page:     (' + event.pageX     + ', ' + event.pageY     + ')\n' +
                         'screen:   (' + event.screenX   + ', ' + event.screenY   + ')\n';
  };
</script>
</htmlexample>

ReadOnly:
true

Spec:
https://w3c.github.io/pointerlock/#dom-mouseevent-movementx

----
instance.movementY : Number

The change in y position of the pointer since the last time the mouse move event fired.

See the corresponding %%#movementX|**movementX**%% and 
%%/Element#requestPointerLock|element.requestPointerLock()%%.

<htmlexample>
<div id="element" style="background: radial-gradient(#aff, #bbb); height: 500px; width: 500px;">
</div>
<pre id="output" style="position: fixed; top: 10px; left: 20px; pointer-events: none;">
</pre>
<script>
  var element = document.getElementById('element');
  var output = document.getElementById('output');

  element.onmousemove = function(event) {
    output.textContent = 'x/y:      (' + event.x         + ', ' + event.y         + ')\n' +
                         'client:   (' + event.clientX   + ', ' + event.clientY   + ')\n' +
                         'movement: (' + event.movementX + ', ' + event.movementY + ')\n' +
                         'offset:   (' + event.offsetX   + ', ' + event.offsetY   + ')\n' +
                         'page:     (' + event.pageX     + ', ' + event.pageY     + ')\n' +
                         'screen:   (' + event.screenX   + ', ' + event.screenY   + ')\n';
  };
</script>
</htmlexample>

ReadOnly:
true

Spec:
https://w3c.github.io/pointerlock/#dom-mouseevent-movementy

----
instance.offsetX : Number

The x position of the pointer relative to **this** the time the event fired.

See the corresponding 
%%#offsetY|**offsetY**%% 
and alternative coordinates
%%#x|**x**%%,
%%#clientX|**clientX**%%,
%%#pageX|**pageX**%%, and
%%#screenX|**screenX**%%.

<htmlexample>
<div id="element" style="background: radial-gradient(#aff, #bbb); height: 500px; width: 500px;">
</div>
<pre id="output" style="position: fixed; top: 10px; left: 20px; pointer-events: none;">
</pre>
<script>
  var element = document.getElementById('element');
  var output = document.getElementById('output');

  element.onmousemove = function(event) {
    output.textContent = 'x/y:    (' + event.x       + ', ' + event.y       + ')\n' +
                         'client: (' + event.clientX + ', ' + event.clientY + ')\n' +
                         'offset: (' + event.offsetX + ', ' + event.offsetY + ')\n' +
                         'page:   (' + event.pageX   + ', ' + event.pageY   + ')\n' +
                         'screen: (' + event.screenX + ', ' + event.screenY + ')\n';
  };
</script>
</htmlexample>

ReadOnly:
true

Spec:
https://drafts.csswg.org/cssom-view/#dom-mouseevent-offsetx

----
instance.offsetY : Number

The y position of the pointer relative to **this** at the time the event fired.

See the corresponding 
%%#offsetX|**offsetX**%% 
and alternative coordinates
%%#y|**y**%%,
%%#clientY|**clientY**%%,
%%#pageY|**pageY**%%, and
%%#screenY|**screenY**%%.

<htmlexample>
<div id="element" style="background: radial-gradient(#aff, #bbb); height: 500px; width: 500px;">
</div>
<pre id="output" style="position: fixed; top: 10px; left: 20px; pointer-events: none;">
</pre>
<script>
  var element = document.getElementById('element');
  var output = document.getElementById('output');

  element.onmousemove = function(event) {
    output.textContent = 'x/y:    (' + event.x       + ', ' + event.y       + ')\n' +
                         'client: (' + event.clientX + ', ' + event.clientY + ')\n' +
                         'offset: (' + event.offsetX + ', ' + event.offsetY + ')\n' +
                         'page:   (' + event.pageX   + ', ' + event.pageY   + ')\n' +
                         'screen: (' + event.screenX + ', ' + event.screenY + ')\n';
  };
</script>
</htmlexample>

ReadOnly:
true

Spec:
https://drafts.csswg.org/cssom-view/#dom-mouseevent-offsety

----
instance.pageX : Number

The x position of the pointer relative to the page at the time the event fired.
Same as **%%#clientX|this.clientX%% + %%/Window#scrollX|window.scrollX%%**.

See the corresponding 
%%#pageY|**pageY**%% 
and alternative coordinates
%%#x|**x**%%,
%%#clientX|**clientX**%%,
%%#offsetX|**offsetX**%%, and
%%#screenX|**screenX**%%.

<htmlexample>
<div id="element" style="background: radial-gradient(#aff, #bbb); height: 500px; width: 500px;">
</div>
<pre id="output" style="position: fixed; top: 10px; left: 20px; pointer-events: none;">
</pre>
<script>
  var element = document.getElementById('element');
  var output = document.getElementById('output');

  element.onmousemove = function(event) {
    output.textContent = 'x/y:    (' + event.x       + ', ' + event.y       + ')\n' +
                         'client: (' + event.clientX + ', ' + event.clientY + ')\n' +
                         'offset: (' + event.offsetX + ', ' + event.offsetY + ')\n' +
                         'page:   (' + event.pageX   + ', ' + event.pageY   + ')\n' +
                         'screen: (' + event.screenX + ', ' + event.screenY + ')\n';
  };
</script>
</htmlexample>

ReadOnly:
true

Spec:
https://drafts.csswg.org/cssom-view/#dom-mouseevent-pagex

----
instance.pageY : Number

The y position of the pointer relative to the page at the time the event fired.
Same as **%%#clientY|this.clientY%% + %%/Window#scrollY|window.scrollY%%**.

See the corresponding 
%%#pageX|**pageX**%% 
and alternative coordinates
%%#y|**y**%%,
%%#clientY|**clientY**%%,
%%#offsetY|**offsetY**%%, and
%%#screenY|**screenY**%%.

<htmlexample>
<div id="element" style="background: radial-gradient(#aff, #bbb); height: 500px; width: 500px;">
</div>
<pre id="output" style="position: fixed; top: 10px; left: 20px; pointer-events: none;">
</pre>
<script>
  var element = document.getElementById('element');
  var output = document.getElementById('output');

  element.onmousemove = function(event) {
    output.textContent = 'x/y:    (' + event.x       + ', ' + event.y       + ')\n' +
                         'client: (' + event.clientX + ', ' + event.clientY + ')\n' +
                         'offset: (' + event.offsetX + ', ' + event.offsetY + ')\n' +
                         'page:   (' + event.pageX   + ', ' + event.pageY   + ')\n' +
                         'screen: (' + event.screenX + ', ' + event.screenY + ')\n';
  };
</script>
</htmlexample>

ReadOnly:
true

Spec:
https://drafts.csswg.org/cssom-view/#dom-mouseevent-pagey

----
instance.screenX : Number

The x position of the pointer on the screen at the time the event fired.

See the corresponding 
%%#screenY|**screenY**%% 
and alternative coordinates
%%#x|**x**%%,
%%#clientX|**clientX**%%,
%%#offsetX|**offsetX**%%, and
%%#pageX|**pageX**%%.

<htmlexample>
<div id="element" style="background: radial-gradient(#aff, #bbb); height: 500px; width: 500px;">
</div>
<pre id="output" style="position: fixed; top: 10px; left: 20px; pointer-events: none;">
</pre>
<script>
  var element = document.getElementById('element');
  var output = document.getElementById('output');

  element.onmousemove = function(event) {
    output.textContent = 'x/y:    (' + event.x       + ', ' + event.y       + ')\n' +
                         'client: (' + event.clientX + ', ' + event.clientY + ')\n' +
                         'offset: (' + event.offsetX + ', ' + event.offsetY + ')\n' +
                         'page:   (' + event.pageX   + ', ' + event.pageY   + ')\n' +
                         'screen: (' + event.screenX + ', ' + event.screenY + ')\n';
  };
</script>
</htmlexample>

Spec:
https://drafts.csswg.org/cssom-view-1/#dom-mouseevent-screenx

ReadOnly:
true

----
instance.screenY : Number

The y position of the pointer on the screen at the time the event fired.

See the corresponding 
%%#screenX|**screenX**%% 
and alternative coordinates
%%#y|**y**%%,
%%#clientY|**clientY**%%,
%%#offsetY|**offsetY**%%, and
%%#pageY|**pageY**%%.

<htmlexample>
<div id="element" style="background: radial-gradient(#aff, #bbb); height: 500px; width: 500px;">
</div>
<pre id="output" style="position: fixed; top: 10px; left: 20px; pointer-events: none;">
</pre>
<script>
  var element = document.getElementById('element');
  var output = document.getElementById('output');

  element.onmousemove = function(event) {
    output.textContent = 'x/y:    (' + event.x       + ', ' + event.y       + ')\n' +
                         'client: (' + event.clientX + ', ' + event.clientY + ')\n' +
                         'offset: (' + event.offsetX + ', ' + event.offsetY + ')\n' +
                         'page:   (' + event.pageX   + ', ' + event.pageY   + ')\n' +
                         'screen: (' + event.screenX + ', ' + event.screenY + ')\n';
  };
</script>
</htmlexample>

Spec:
https://drafts.csswg.org/cssom-view-1/#dom-mouseevent-screeny

ReadOnly:
true

----
instance.ctrlKey : Boolean

**true** if the Control key on the keyboard was pressed at the time
the event was generated. 
See also %%#getModifierState|**getModifierState()**%%.

<htmlexample>
<pre id="element" style="background: #eee; height: 100px">
</pre>
<script>
  var element = document.getElementById('element');

  element.onmousemove = function(event) {
    element.textContent = 'screen: (' + event.screenX + ', ' + event.screenY + ')\n' +
                          'ctrl: ' + event.ctrlKey;
                        
  };
</script>
</htmlexample>

Spec:
http://www.w3.org/TR/DOM-Level-3-Events/#widl-MouseEvent-ctrlKey

ReadOnly:
true

----
instance.shiftKey : Boolean

**true** if the Shift key on the keyboard was pressed at the time
the event was generated. 
See also %%#getModifierState|**getModifierState()**%%.

<htmlexample>
<pre id="element" style="background: #eee; height: 100px">
</pre>
<script>
  var element = document.getElementById('element');

  element.onmousemove = function(event) {
    element.textContent = 'screen: (' + event.screenX + ', ' + event.screenY + ')\n' +
                          'shift: ' + event.shiftKey;
                        
  };
</script>
</htmlexample>

Spec:
http://www.w3.org/TR/DOM-Level-3-Events/#widl-MouseEvent-shiftKey

ReadOnly:
true

----
instance.altKey : Boolean

**true** if the Alt key (Option on Mac) on the keyboard was pressed at the time
the event was generated. 
See also %%#getModifierState|**getModifierState()**%%.

<htmlexample>
<pre id="element" style="background: #eee; height: 100px">
</pre>
<script>
  var element = document.getElementById('element');

  element.onmousemove = function(event) {
    element.textContent = 'screen: (' + event.screenX + ', ' + event.screenY + ')\n' +
                          'alt: ' + event.altKey;
                        
  };
</script>
</htmlexample>

Spec:
http://www.w3.org/TR/DOM-Level-3-Events/#widl-MouseEvent-altKey

ReadOnly:
true

----
instance.metaKey : Boolean

**true** if the keyboard's meta (Command on Mac, not available on Windows) key 
was pressed at the time the event was generated. 
See also %%#getModifierState|**getModifierState()**%%.

<htmlexample>
<pre id="element" style="background: #eee; height: 100px">
</pre>
<script>
  var element = document.getElementById('element');

  element.onmousemove = function(event) {
    element.textContent = 'screen: (' + event.screenX + ', ' + event.screenY + ')\n' +
                          'meta: ' + event.metaKey;
                        
  };
</script>
</htmlexample>

Spec:
http://www.w3.org/TR/DOM-Level-3-Events/#widl-MouseEvent-metaKey

ReadOnly:
true

----
instance.button : Number

The mouse button that generated this event.  **0** is the primary (left) button.
**1** is the middle button.  **2** is the secondary (right) button.

See also %%#buttons|**buttons**%%.

<htmlexample>
<pre id="element" style="background: #eee; height: 100px">
  button: <span id="button"></span>
  type: <span id="type"></span>
</pre>
<script>
  var buttonNames = { 0: 'left', 1: 'middle', 2: 'right' };

  var displayButtons = function(event) {
    document.getElementById('button').textContent = buttonNames[event.button];
    document.getElementById('type').textContent = event.type;
  };

  var element = document.getElementById('element');

  element.addEventListener('mousedown', displayButtons);
  element.addEventListener('mouseup', displayButtons);
</script>
</htmlexample>

Spec:
http://www.w3.org/TR/DOM-Level-3-Events/#widl-MouseEvent-button

ReadOnly:
true

----
instance.buttons : Number

The bitwise combinations of mouse buttons pressed.

**1** is the primary (left) button.
**2** is the secondary (right) button.
**4** is the middle button.
**8** is the back mouse button.
**16** is the forward mouse button.

Will be **0** when no buttons are pressed.  

See also %%#button|**button**%%.

Spec:
http://www.w3.org/TR/DOM-Level-3-Events/#widl-MouseEvent-button

ReadOnly:
true

----
instance.relatedTarget : Element

Only applies to 
focusin, 
focusout, 
mouseenter, 
mouseleave, 
mouseout, 
mouseover, 
dragenter, 
and
dragexit
events.  It is the element that receives the opposite event pair for this event.
For example, the **relatedTarget** of a mouseenter is the element that will receive the 
mouseleave event. 

Spec:
http://www.w3.org/TR/DOM-Level-3-Events/#widl-MouseEvent-relatedTarget

ReadOnly:
true

----
instance.x : Number

The x position of the pointer relative to the viewport at the time the event fired.
This is the same as %%#clientX|**clientX**%%.

See the corresponding 
%%#y|**y**%% 
and alternative coordinates
%%#offsetX|**offsetX**%%,
%%#pageX|**pageX**%%, and
%%#screenX|**screenX**%%.

<htmlexample>
<div id="element" style="background: radial-gradient(#aff, #bbb); height: 500px; width: 500px;">
</div>
<pre id="output" style="position: fixed; top: 10px; left: 20px; pointer-events: none;">
</pre>
<script>
  var element = document.getElementById('element');
  var output = document.getElementById('output');

  element.onmousemove = function(event) {
    output.textContent = 'x/y:    (' + event.x       + ', ' + event.y       + ')\n' +
                         'client: (' + event.clientX + ', ' + event.clientY + ')\n' +
                         'offset: (' + event.offsetX + ', ' + event.offsetY + ')\n' +
                         'page:   (' + event.pageX   + ', ' + event.pageY   + ')\n' +
                         'screen: (' + event.screenX + ', ' + event.screenY + ')\n';
  };
</script>
</htmlexample>

ReadOnly:
true

Spec:
https://drafts.csswg.org/cssom-view/#dom-mouseevent-x

----
instance.y : Number

The y position of the pointer relative to the viewport at the time the event fired.
This is the same as %%#clientY|**clientY**%%.

See the corresponding 
%%#x|**x**%% 
and alternative coordinates
%%#offsetY|**offsetY**%%,
%%#pageY|**pageY**%%, and
%%#screenY|**screenY**%%.

<htmlexample>
<div id="element" style="background: radial-gradient(#aff, #bbb); height: 500px; width: 500px;">
</div>
<pre id="output" style="position: fixed; top: 10px; left: 20px; pointer-events: none;">
</pre>
<script>
  var element = document.getElementById('element');
  var output = document.getElementById('output');

  element.onmousemove = function(event) {
    output.textContent = 'x/y:    (' + event.x       + ', ' + event.y       + ')\n' +
                         'client: (' + event.clientX + ', ' + event.clientY + ')\n' +
                         'offset: (' + event.offsetX + ', ' + event.offsetY + ')\n' +
                         'page:   (' + event.pageX   + ', ' + event.pageY   + ')\n' +
                         'screen: (' + event.screenX + ', ' + event.screenY + ')\n';
  };
</script>
</htmlexample>


ReadOnly:
true

Spec:
https://drafts.csswg.org/cssom-view/#dom-mouseevent-y

----
prototype.getModifierState(modifierKey : String) : Boolean

Returns **true** if the the **modifierKey** is pressed or active.
**modifierKey** must be one of
**'Alt'**,
**'AltGraph'**,
**'CapsLock'**,
**'Control'**,
**'Fn'**,
**'Meta'**,
**'NumLock'**,
**'ScrollLock'**,
**'Shift'**,
or 
**'SymbolLock'**.

Spec:
https://w3c.github.io/uievents/#dom-mouseevent-getmodifierstate

