StringTemplateArray : Array<String>

A StringTemplateArray is the parameter passed to tagged template functions. In addition
to being an array of Strings, it contains the "raw" strings before escaping is 
applied.

See %%/String#raw|String.raw%% for a built in tagged template function.


Spec:
https://tc39.es/ecma262/#sec-gettemplateobject

----
instance.raw : Array<String>

Returns the template parts in **this** as written in the source code. For 
example, if the template string is **`\n`**, **this[0]** will be a string of 
length **1** containing the new line character whereas **this.raw[0]** will 
be a string of length **2** containing **'\'** followed by **'n'**.

<example>
const join = (strings) => "['" + strings.join("', '") + "']";

// The following mimics the normal template string behavior with logging
const myTemplate = (stringTemplateArray, ...parts) => {
  console.log('raw:   ', join(stringTemplateArray.raw));
  console.log('cooked:', join(stringTemplateArray));
  console.log('parts: ', join(parts));
  let result = stringTemplateArray[0];
  for (let i = 1; i < stringTemplateArray.length; i++) {
    result += parts[i - 1] + stringTemplateArray[i];
  }
  return result;
};

console.log('result:', myTemplate`\n`);
console.log();
console.log('result:', myTemplate`
`);
console.log();
console.log('result:', myTemplate`a\tb`);
console.log();
console.log('result:', myTemplate`A string\twith ${2}\tparts${'!'}`);
</example>

ReadOnly:
true
